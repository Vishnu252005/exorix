'use client';
import { TextInput } from '../../../../internal/components/TextInput.js';
import { cn, color, background, border } from '../../../../styles/theme.js';
import { useCallback } from 'react';
import { resolveAddressInput } from '../utils/resolveAddressInput.js';
import { validateAddressInput } from '../utils/validateAddressInput.js';
import { jsxs, jsx } from 'react/jsx-runtime';
function SendAddressInput({
  selectedRecipient,
  recipientInput,
  setRecipientInput,
  setValidatedInput,
  handleRecipientInputChange,
  classNames
}) {
  const displayValue = selectedRecipient?.displayValue || recipientInput;
  const handleFocus = useCallback(() => {
    if (selectedRecipient.address) {
      handleRecipientInputChange();
    }
  }, [selectedRecipient, handleRecipientInputChange]);
  const handleSetValue = useCallback(async input => {
    const resolved = await resolveAddressInput(selectedRecipient.address, input);
    setValidatedInput(resolved);
  }, [selectedRecipient.address, setValidatedInput]);
  const validateInput = useCallback(recipientInput => !!validateAddressInput(recipientInput), []);
  return /*#__PURE__*/jsxs("div", {
    "data-testid": "ockSendAddressInput",
    className: cn(border.lineDefault, border.radius, 'w-full', 'flex items-center gap-2', 'px-4 py-3', classNames?.container),
    children: [/*#__PURE__*/jsx("span", {
      className: cn(color.foreground, classNames?.label),
      children: "To"
    }), /*#__PURE__*/jsx(TextInput, {
      inputMode: "text",
      placeholder: "Basename, ENS, or Address",
      value: displayValue,
      inputValidator: validateInput,
      setValue: setRecipientInput,
      onChange: handleSetValue,
      onFocus: handleFocus,
      "aria-label": "Input Receiver Address",
      className: cn(background.default, 'w-full outline-none', classNames?.input)
    })]
  });
}
export { SendAddressInput };
//# sourceMappingURL=SendAddressInput.js.map
