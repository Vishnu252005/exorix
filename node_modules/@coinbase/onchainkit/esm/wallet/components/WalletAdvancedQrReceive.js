'use client';
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import { CopyButton } from '../../internal/components/CopyButton.js';
import { PressableIcon } from '../../internal/components/PressableIcon.js';
import { QrCodeSvg } from '../../internal/components/QrCode/QrCodeSvg.js';
import { backArrowSvg } from '../../internal/svg/backArrowSvg.js';
import { copySvg } from '../../internal/svg/copySvg.js';
import { zIndex } from '../../styles/constants.js';
import { cn, pressable, border, text, color } from '../../styles/theme.js';
import { useState, useCallback } from 'react';
import { useWalletContext } from './WalletProvider.js';
import { jsxs, jsx } from 'react/jsx-runtime';
function WalletAdvancedQrReceive({
  classNames
}) {
  const _useWalletContext = useWalletContext(),
    address = _useWalletContext.address,
    setActiveFeature = _useWalletContext.setActiveFeature,
    isActiveFeatureClosing = _useWalletContext.isActiveFeatureClosing,
    setIsActiveFeatureClosing = _useWalletContext.setIsActiveFeatureClosing;
  const _useState = useState('Copy'),
    _useState2 = _slicedToArray(_useState, 2),
    copyText = _useState2[0],
    setCopyText = _useState2[1];
  const _useState3 = useState('Copy address'),
    _useState4 = _slicedToArray(_useState3, 2),
    copyButtonText = _useState4[0],
    setCopyButtonText = _useState4[1];
  const handleCloseQr = useCallback(() => {
    setIsActiveFeatureClosing(true);
  }, [setIsActiveFeatureClosing]);
  const handleAnimationEnd = useCallback(() => {
    if (isActiveFeatureClosing) {
      setActiveFeature(null);
      setIsActiveFeatureClosing(false);
    }
  }, [isActiveFeatureClosing, setActiveFeature, setIsActiveFeatureClosing]);
  const resetAffordanceText = useCallback(() => {
    setTimeout(() => {
      setCopyText('Copy');
      setCopyButtonText('Copy address');
    }, 2000);
  }, []);
  const handleCopyButtonSuccess = useCallback(() => {
    setCopyButtonText('Address copied');
    resetAffordanceText();
  }, [resetAffordanceText]);
  const handleCopyButtonError = useCallback(() => {
    setCopyButtonText('Failed to copy address');
    resetAffordanceText();
  }, [resetAffordanceText]);
  const handleCopyIconSuccess = useCallback(() => {
    setCopyText('Copied');
    resetAffordanceText();
  }, [resetAffordanceText]);
  const handleCopyIconError = useCallback(() => {
    setCopyText('Failed to copy');
    resetAffordanceText();
  }, [resetAffordanceText]);
  return /*#__PURE__*/jsxs("div", {
    "data-testid": "ockWalletAdvancedQrReceive",
    className: cn(border.radius, color.foreground, text.headline, 'flex flex-col items-center justify-between', 'h-120 w-88 px-4 pt-3 pb-4', isActiveFeatureClosing ? 'fade-out slide-out-to-left-5 animate-out fill-mode-forwards ease-in-out' : 'fade-in slide-in-from-left-5 linear animate-in duration-150', classNames?.container),
    onAnimationEnd: handleAnimationEnd,
    children: [/*#__PURE__*/jsxs("div", {
      className: cn('flex h-[34px] w-full flex-row items-center justify-between', classNames?.header),
      children: [/*#__PURE__*/jsx(PressableIcon, {
        ariaLabel: "Back button",
        onClick: handleCloseQr,
        children: /*#__PURE__*/jsx("div", {
          className: "p-2",
          children: backArrowSvg
        })
      }), /*#__PURE__*/jsx("span", {
        children: "Scan to receive"
      }), /*#__PURE__*/jsxs("div", {
        className: "group relative",
        children: [/*#__PURE__*/jsx(CopyButton, {
          label: copySvg,
          copyValue: address ?? '',
          onSuccess: handleCopyIconSuccess,
          onError: handleCopyIconError,
          className: cn(pressable.default, border.radiusInner, border.default, 'flex items-center justify-center p-2'),
          "aria-label": "Copy your address by clicking the icon"
        }), /*#__PURE__*/jsx(CopyButton, {
          label: copyText,
          copyValue: address ?? '',
          onSuccess: handleCopyIconSuccess,
          onError: handleCopyIconError,
          className: cn(pressable.alternate, text.legal, color.foreground, border.default, border.radius, zIndex.dropdown, 'absolute top-full right-0 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100'),
          "aria-label": "Copy your address by clicking the tooltip"
        })]
      })]
    }), /*#__PURE__*/jsx(QrCodeSvg, {
      value: address
    }), /*#__PURE__*/jsx(CopyButton, {
      copyValue: address ?? '',
      label: copyButtonText,
      className: cn(border.radius, pressable.alternate, 'w-full p-3', classNames?.copyButton),
      onSuccess: handleCopyButtonSuccess,
      onError: handleCopyButtonError,
      "aria-label": "Copy your address by clicking the button"
    })]
  });
}
export { WalletAdvancedQrReceive };
//# sourceMappingURL=WalletAdvancedQrReceive.js.map
