'use client';
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == typeof i ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != typeof i) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { Draggable } from '../../internal/components/Draggable/Draggable.js';
import { useIsMounted } from '../../internal/hooks/useIsMounted.js';
import { useOutsideClick } from '../../internal/hooks/useOutsideClick.js';
import { useTheme } from '../../internal/hooks/useTheme.js';
import { findComponent } from '../../internal/utils/findComponent.js';
import { cn } from '../../styles/theme.js';
import { useRef, useMemo, Children, isValidElement } from 'react';
import { getWalletDraggableProps } from '../utils/getWalletDraggableProps.js';
import { ConnectWallet } from './ConnectWallet.js';
import { WalletAdvanced } from './WalletAdvanced.js';
import { WalletDropdown } from './WalletDropdown.js';
import { WalletProvider, useWalletContext } from './WalletProvider.js';
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
const defaultWalletChildren = /*#__PURE__*/jsxs(Fragment, {
  children: [/*#__PURE__*/jsx(ConnectWallet, {}), /*#__PURE__*/jsx(WalletDropdown, {})]
});
function Wallet({
  children,
  className,
  draggable,
  draggableStartingPosition
}) {
  const componentTheme = useTheme();
  const isMounted = useIsMounted();
  // prevents SSR hydration issue
  if (!isMounted) {
    return null;
  }
  return /*#__PURE__*/jsx(WalletProvider, {
    children: /*#__PURE__*/jsx(WalletContent, _objectSpread(_objectSpread({
      className: cn(componentTheme, className)
    }, getWalletDraggableProps({
      draggable,
      draggableStartingPosition
    })), {}, {
      children: children
    }))
  });
}
function WalletContent({
  children,
  className,
  draggable,
  draggableStartingPosition
}) {
  const _useWalletContext = useWalletContext(),
    isSubComponentOpen = _useWalletContext.isSubComponentOpen,
    isConnectModalOpen = _useWalletContext.isConnectModalOpen,
    handleClose = _useWalletContext.handleClose,
    connectRef = _useWalletContext.connectRef,
    breakpoint = _useWalletContext.breakpoint;
  const walletContainerRef = useRef(null);
  useOutsideClick(walletContainerRef, handleClose);
  // Note: this can be removed after deprecating WalletAdvanced
  const _useMemo = useMemo(() => {
      const childrenArray = Children.toArray(children);
      return {
        dropdown: childrenArray.find(findComponent(WalletDropdown)),
        advanced: childrenArray.find(findComponent(WalletAdvanced))
      };
    }, [children]),
    dropdown = _useMemo.dropdown,
    advanced = _useMemo.advanced;
  // Note: this can be removed after deprecating WalletAdvanced
  // cannot use advanced and dropdown,
  // default to dropdown
  const childrenToRender = useMemo(() => {
    return Children.map(children, child => {
      if (/*#__PURE__*/isValidElement(child) && child.type === WalletAdvanced && dropdown) {
        return null;
      }
      return child;
    });
  }, [dropdown, children]);
  // Note: this can be removed after deprecating WalletAdvanced
  if (dropdown && advanced) {
    console.error('Defaulted to WalletDropdown. Wallet cannot have both WalletDropdown and WalletAdvanced as children.');
  }
  // dragging should be disabled when the connect wallet modal is open
  // or when the subcomponent is open on mobile (because then we use bottom sheet)
  const disableDraggable = isConnectModalOpen || breakpoint === 'sm' && isSubComponentOpen;
  if (draggable) {
    return /*#__PURE__*/jsx("div", {
      ref: walletContainerRef,
      className: cn('relative w-fit shrink-0', className),
      children: /*#__PURE__*/jsx(Draggable, {
        startingPosition: draggableStartingPosition,
        disabled: disableDraggable,
        children: /*#__PURE__*/jsx("div", {
          ref: connectRef,
          children: childrenToRender || defaultWalletChildren
        })
      })
    });
  }
  return /*#__PURE__*/jsx("div", {
    ref: walletContainerRef,
    className: cn('relative w-fit shrink-0', className),
    children: /*#__PURE__*/jsx("div", {
      ref: connectRef,
      children: childrenToRender || defaultWalletChildren
    })
  });
}
export { Wallet };
//# sourceMappingURL=Wallet.js.map
