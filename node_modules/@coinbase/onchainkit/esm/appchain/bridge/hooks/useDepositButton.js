'use client';
import { Spinner } from '../../../internal/components/Spinner.js';
import { useMemo } from 'react';
import { useAccount } from 'wagmi';
import { jsx } from 'react/jsx-runtime';
function useDepositButton({
  depositStatus,
  withdrawStatus,
  bridgeParams
}) {
  const _useAccount = useAccount(),
    isConnected = _useAccount.isConnected;
  const isPending = depositStatus === 'depositPending' || withdrawStatus === 'withdrawPending';
  const isRejected = depositStatus === 'depositRejected' || withdrawStatus === 'withdrawRejected';
  const buttonContent = useMemo(() => {
    if (isPending) {
      return /*#__PURE__*/jsx(Spinner, {});
    }
    if (isConnected) {
      return 'Confirm';
    }
    return 'Connect Wallet';
  }, [isPending, isConnected]);
  const isDisabled = isConnected && (isPending || bridgeParams.amount === '' || Number(bridgeParams.amount) === 0);
  return {
    isPending,
    isRejected,
    buttonContent,
    isDisabled
  };
}
export { useDepositButton };
//# sourceMappingURL=useDepositButton.js.map
