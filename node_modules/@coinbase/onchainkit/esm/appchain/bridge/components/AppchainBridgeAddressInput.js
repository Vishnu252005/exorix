'use client';
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
import '../../../identity/index.js';
import { PressableIcon } from '../../../internal/components/PressableIcon.js';
import { TextInput } from '../../../internal/components/TextInput.js';
import { backArrowSvg } from '../../../internal/svg/backArrowSvg.js';
import { useState } from 'react';
import { useAppchainBridgeContext } from './AppchainBridgeProvider.js';
import { jsx, jsxs } from 'react/jsx-runtime';
import { Avatar } from '../../../identity/components/Avatar.js';
import { Address } from '../../../identity/components/Address.js';
const AppchainBridgeAddressInput = () => {
  const _useAppchainBridgeCon = useAppchainBridgeContext(),
    setIsAddressModalOpen = _useAppchainBridgeCon.setIsAddressModalOpen,
    handleAddressSelect = _useAppchainBridgeCon.handleAddressSelect;
  const _useState = useState(null),
    _useState2 = _slicedToArray(_useState, 2),
    address = _useState2[0],
    setAddress = _useState2[1];
  const _useState3 = useState(false),
    _useState4 = _slicedToArray(_useState3, 2),
    isValidAddress = _useState4[0],
    setIsValidAddress = _useState4[1];
  const validateAddress = addr => {
    return /^0x[a-fA-F0-9]{40}$/.test(addr);
  };
  const backButton = /*#__PURE__*/jsx(PressableIcon, {
    ariaLabel: "Back button",
    onClick: () => {
      setIsAddressModalOpen(false);
    },
    children: /*#__PURE__*/jsx("div", {
      className: "p-2",
      children: backArrowSvg
    })
  });
  return /*#__PURE__*/jsxs("div", {
    className: "flex w-full flex-col",
    children: [/*#__PURE__*/jsxs("div", {
      className: "flex items-center",
      children: [backButton, /*#__PURE__*/jsx("h2", {
        className: "ock-text-foreground mr-10 flex-1 text-center font-medium text-lg",
        children: "Send to"
      })]
    }), /*#__PURE__*/jsxs("div", {
      className: "mt-4 px-4",
      children: [/*#__PURE__*/jsxs("div", {
        className: "relative flex items-center",
        children: [/*#__PURE__*/jsx("span", {
          className: "absolute left-4 text-ock-line-default",
          children: "To"
        }), /*#__PURE__*/jsx(TextInput, {
          className: "ock-bg-default ock-text-foreground ock-border-line-default w-full rounded-lg border p-3 pl-12 placeholder-ock-default focus:border-blue-500 focus:outline-none",
          placeholder: "",
          onChange: value => {
            const addr = value;
            setAddress(addr);
            setIsValidAddress(validateAddress(addr));
          },
          value: address || ''
        })]
      }), address && !isValidAddress && /*#__PURE__*/jsx("p", {
        className: "mt-2 text-red-500 text-sm",
        children: "Please enter a valid Ethereum address"
      }), address && isValidAddress && /*#__PURE__*/jsxs("button", {
        className: "hover:ock-bg-muted mt-4 flex w-full gap-2 rounded-lg p-4 transition-colors",
        onClick: () => {
          handleAddressSelect(address);
          setIsAddressModalOpen(false);
        },
        type: "button",
        children: [/*#__PURE__*/jsx(Avatar, {
          address: address,
          className: "rounded-full bg-white"
        }), /*#__PURE__*/jsxs("span", {
          className: "flex flex-col items-start gap-1 text-ock-text-muted",
          children: [/*#__PURE__*/jsx(Address, {
            address: address,
            hasCopyAddressOnClick: false,
            className: "!text-white font-bold"
          }), /*#__PURE__*/jsx(Address, {
            address: address,
            isSliced: false,
            hasCopyAddressOnClick: false
          })]
        })]
      })]
    })]
  });
};
export { AppchainBridgeAddressInput };
//# sourceMappingURL=AppchainBridgeAddressInput.js.map
