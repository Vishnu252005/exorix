import { cn } from '../../../styles/theme.js';
import { useCallback } from 'react';
import { useTabsContext } from './Tabs.js';
import { jsx } from 'react/jsx-runtime';
function TabsList({
  className,
  children
}) {
  const _useTabsContext = useTabsContext(),
    setSelectedTab = _useTabsContext.setSelectedTab;
  const handleKeyDown = useCallback(event => {
    const target = event.target;
    const tabs = Array.from(target.parentElement?.querySelectorAll('[role="tab"]') || []);
    const currentIndex = tabs.indexOf(target);
    if (currentIndex === -1) {
      return;
    }
    let nextIndex;
    switch (event.key) {
      case 'ArrowRight':
        nextIndex = (currentIndex + 1) % tabs.length;
        break;
      case 'ArrowLeft':
        nextIndex = (currentIndex - 1 + tabs.length) % tabs.length;
        break;
      default:
        return;
    }
    const nextTab = tabs[nextIndex];
    nextTab.focus();

    // Extract the value from the tab's aria-controls attribute
    const tabValue = nextTab.getAttribute('aria-controls')?.replace('-panel', '');
    if (tabValue) {
      setSelectedTab(tabValue);
    }
    event.preventDefault();
  }, [setSelectedTab]);
  return /*#__PURE__*/jsx("div", {
    className: cn('flex overflow-hidden', className),
    role: "tablist",
    "aria-orientation": "horizontal",
    onKeyDown: handleKeyDown,
    children: children
  });
}
export { TabsList };
//# sourceMappingURL=TabsList.js.map
