'use client';
import { useMorphoVault } from './useMorphoVault.js';
import { buildWithdrawFromMorphoTx } from '../utils/buildWithdrawFromMorphoTx.js';
import { parseUnits } from 'viem';
/**
 * Generates Call[] for a Morpho withdraw transaction
 * to be used with <Transaction />
 */
function useBuildWithdrawFromMorphoTx({
  vaultAddress,
  amount,
  recipientAddress,
  tokenDecimals
}) {
  const _useMorphoVault = useMorphoVault({
      vaultAddress,
      recipientAddress
    }),
    asset = _useMorphoVault.asset,
    balance = _useMorphoVault.balance,
    vaultDecimals = _useMorphoVault.vaultDecimals;
  const amountIsGreaterThanBalance = Number(amount) > Number(balance);
  if (!asset || balance === undefined || !vaultDecimals || !recipientAddress || amountIsGreaterThanBalance || tokenDecimals === undefined) {
    return {
      calls: []
    };
  }
  const parsedAmount = parseUnits(amount, tokenDecimals);
  const calls = buildWithdrawFromMorphoTx({
    recipientAddress,
    vaultAddress,
    amount: parsedAmount
  });
  return {
    calls
  };
}
export { useBuildWithdrawFromMorphoTx };
//# sourceMappingURL=useBuildWithdrawFromMorphoTx.js.map
