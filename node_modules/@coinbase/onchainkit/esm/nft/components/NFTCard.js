'use client';
import { useIsMounted } from '../../internal/hooks/useIsMounted.js';
import { useTheme } from '../../internal/hooks/useTheme.js';
import { NFTLifecycleProvider } from './NFTLifecycleProvider.js';
import { NFTProvider } from './NFTProvider.js';
import { useNFTData } from '../hooks/useNFTData.js';
import { LifecycleType } from '../types.js';
import { useCallback } from 'react';
import { useAccount } from 'wagmi';
import { cn, color, pressable, border } from '../../styles/theme.js';
import NFTErrorBoundary from './NFTErrorBoundary.js';
import { NFTErrorFallback } from './NFTErrorFallback.js';
import './view/index.js';
import { jsxs, Fragment, jsx } from 'react/jsx-runtime';
import { NFTMedia } from './view/NFTMedia.js';
import { NFTTitle } from './view/NFTTitle.js';
import { NFTOwner } from './view/NFTOwner.js';
import { NFTLastSoldPrice } from './view/NFTLastSoldPrice.js';
import { NFTNetwork } from './view/NFTNetwork.js';
function NFTCardDefaultContent() {
  return /*#__PURE__*/jsxs(Fragment, {
    children: [/*#__PURE__*/jsx(NFTMedia, {}), /*#__PURE__*/jsx(NFTTitle, {}), /*#__PURE__*/jsx(NFTOwner, {}), /*#__PURE__*/jsx(NFTLastSoldPrice, {}), /*#__PURE__*/jsx(NFTNetwork, {})]
  });
}
function NFTCard({
  children = /*#__PURE__*/jsx(NFTCardDefaultContent, {}),
  className,
  contractAddress,
  tokenId,
  useNFTData: useNFTData$1 = useNFTData,
  onStatus,
  onError,
  onSuccess
}) {
  const componentTheme = useTheme();
  const isMounted = useIsMounted();
  const _useAccount = useAccount(),
    chain = _useAccount.chain;
  const handleOnClick = useCallback(() => {
    const network = chain?.name.toLowerCase() ?? 'base';
    const zoraUrl = `https://zora.co/collect/${network}:${contractAddress}/${tokenId}`;
    window.open(zoraUrl, '_blank', 'noopener,noreferrer');
  }, [chain, contractAddress, tokenId]);
  // prevents SSR hydration issue
  if (!isMounted) {
    return null;
  }
  return /*#__PURE__*/jsx(NFTErrorBoundary, {
    fallback: NFTErrorFallback,
    children: /*#__PURE__*/jsx(NFTLifecycleProvider, {
      type: LifecycleType.VIEW,
      onStatus: onStatus,
      onError: onError,
      onSuccess: onSuccess,
      children: /*#__PURE__*/jsx(NFTProvider, {
        contractAddress: contractAddress,
        tokenId: tokenId,
        useNFTData: useNFTData$1,
        children: /*#__PURE__*/jsx("button", {
          type: "button",
          className: cn(componentTheme, color.foreground, pressable.default, border.radius, 'flex w-full max-w-[500px] flex-col items-stretch gap-1.5 border p-4 text-left', `hover:border-[${border.defaultActive}]`, className),
          "data-testid": "ockNFTCard_Container",
          onClick: handleOnClick,
          children: children
        })
      })
    })
  });
}
export { NFTCard };
//# sourceMappingURL=NFTCard.js.map
