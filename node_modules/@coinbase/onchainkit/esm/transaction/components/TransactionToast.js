import { useCallback } from 'react';
import { Toast } from '../../internal/components/Toast.js';
import { useTransactionContext } from './TransactionProvider.js';
import { TransactionToastAction } from './TransactionToastAction.js';
import { TransactionToastIcon } from './TransactionToastIcon.js';
import { TransactionToastLabel } from './TransactionToastLabel.js';
import { jsx, jsxs, Fragment } from 'react/jsx-runtime';
function TransactionToast({
  children,
  className,
  durationMs = 5000,
  position = 'bottom-center'
}) {
  const _useTransactionContex = useTransactionContext(),
    errorMessage = _useTransactionContex.errorMessage,
    isLoading = _useTransactionContex.isLoading,
    isToastVisible = _useTransactionContex.isToastVisible,
    receipt = _useTransactionContex.receipt,
    setIsToastVisible = _useTransactionContex.setIsToastVisible,
    transactionHash = _useTransactionContex.transactionHash,
    transactionId = _useTransactionContex.transactionId;
  const closeToast = useCallback(() => {
    setIsToastVisible(false);
  }, [setIsToastVisible]);
  const isInProgress = !receipt && !isLoading && !transactionHash && !errorMessage && !transactionId;
  if (!isToastVisible || isInProgress) {
    return null;
  }
  return /*#__PURE__*/jsx(Toast, {
    position: position,
    className: className,
    durationMs: durationMs,
    isVisible: isToastVisible,
    onClose: closeToast,
    startTimeout: !!receipt || !!errorMessage,
    children: children ?? /*#__PURE__*/jsxs(Fragment, {
      children: [/*#__PURE__*/jsx(TransactionToastIcon, {}), /*#__PURE__*/jsx(TransactionToastLabel, {}), /*#__PURE__*/jsx(TransactionToastAction, {})]
    })
  });
}
export { TransactionToast };
//# sourceMappingURL=TransactionToast.js.map
