import { convertSnakeToCamelCase } from '../../internal/utils/convertSnakeToCamelCase.js';
import { getApiKey } from '../../internal/utils/getApiKey.js';
import { ONRAMP_API_BASE_URL } from '../constants.js';

/**
 * Returns supported fiat currencies and available crypto assets that can be passed into the Buy Quote API.
 *
 * @param country ISO 3166-1 two-digit country code string representing the purchasing user’s country of residence, e.g., US. `required`
 * @param subdivision ISO 3166-2 two-digit country subdivision code representing the purchasing user’s subdivision of residence within their country, e.g. `NY`.
 */
async function fetchOnrampOptions({
  country,
  subdivision,
  apiKey
}) {
  const cpdApiKey = apiKey || getApiKey();
  let queryParams = `?country=${country}`;
  if (subdivision) {
    queryParams = `${queryParams}&subdivision=${subdivision}`;
  }
  const response = await fetch(`${ONRAMP_API_BASE_URL}/buy/options${queryParams}`, {
    method: 'GET',
    headers: {
      Authorization: `Bearer ${cpdApiKey}`
    }
  });
  const responseJson = await response.json();
  return convertSnakeToCamelCase(responseJson);
}
export { fetchOnrampOptions };
//# sourceMappingURL=fetchOnrampOptions.js.map
