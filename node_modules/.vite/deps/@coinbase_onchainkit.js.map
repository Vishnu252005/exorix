{
  "version": 3,
  "sources": ["../../@coinbase/onchainkit/src/core/utils/isBase.ts", "../../@coinbase/onchainkit/src/core/utils/isEthereum.ts", "../../@coinbase/onchainkit/src/core/OnchainKitConfig.ts", "../../@coinbase/onchainkit/src/core/createWagmiConfig.ts", "../../@coinbase/onchainkit/src/internal/hooks/useProviderDependencies.tsx", "../../@coinbase/onchainkit/src/DefaultOnchainKitProviders.tsx", "../../@coinbase/onchainkit/src/core/analytics/constants.ts", "../../@coinbase/onchainkit/src/version.ts", "../../@coinbase/onchainkit/src/core/network/constants.ts", "../../@coinbase/onchainkit/src/core/analytics/utils/sendAnalytics.ts", "../../@coinbase/onchainkit/src/core/analytics/hooks/useAnalytics.ts", "../../@coinbase/onchainkit/src/core/analytics/types.ts", "../../@coinbase/onchainkit/src/OnchainKitProviderBoundary.tsx", "../../@coinbase/onchainkit/src/core/constants.ts", "../../@coinbase/onchainkit/src/identity/constants.ts", "../../@coinbase/onchainkit/src/internal/utils/checkHashLength.ts", "../../@coinbase/onchainkit/src/OnchainKitProvider.tsx", "../../@coinbase/onchainkit/src/useOnchainKit.tsx"],
  "sourcesContent": ["import { base, baseSepolia } from 'viem/chains';\nimport type { IsBaseOptions } from '../types';\n\n/**\n * isBase\n *  - Checks if the paymaster operations chain id is valid\n *  - Only allows the Base and Base Sepolia chain ids\n */\nexport function isBase({\n  chainId,\n  isMainnetOnly = false,\n}: IsBaseOptions): boolean {\n  // If only Base mainnet\n  if (isMainnetOnly && chainId === base.id) {\n    return true;\n  }\n  // If only Base or Base Sepolia\n  if (!isMainnetOnly && (chainId === baseSepolia.id || chainId === base.id)) {\n    return true;\n  }\n  return false;\n}\n", "import { mainnet, sepolia } from 'viem/chains';\nimport type { IsEthereumOptions } from '../types';\n\n/**\n * isEthereum\n *  - Checks if the chain is mainnet or sepolia\n */\nexport function isEthereum({\n  chainId,\n  isMainnetOnly = false,\n}: IsEthereumOptions): boolean {\n  // If only ETH mainnet\n  if (isMainnetOnly && chainId === mainnet.id) {\n    return true;\n  }\n  // If only ETH or ETH Sepolia\n  if (!isMainnetOnly && (chainId === sepolia.id || chainId === mainnet.id)) {\n    return true;\n  }\n  return false;\n}\n", "import { baseSepolia } from 'viem/chains';\nimport type { OnchainKitConfig, SetOnchainKitConfig } from './types';\n\n/**\n * The ONCHAIN_KIT_CONFIG is not exported at index.ts,\n * but only accessed through the get and set functions.\n */\nexport const ONCHAIN_KIT_CONFIG: OnchainKitConfig = {\n  address: null,\n  apiKey: null,\n  chain: baseSepolia,\n  config: {\n    analytics: true,\n    analyticsUrl: null,\n    appearance: {\n      name: null,\n      logo: null,\n      mode: null,\n      theme: null,\n    },\n    paymaster: null,\n    wallet: {\n      display: null,\n      termsUrl: null,\n      privacyUrl: null,\n      supportedWallets: {\n        rabby: false,\n        trust: false,\n        frame: false,\n      },\n    },\n  },\n  rpcUrl: null,\n  schemaId: null,\n  projectId: null,\n  sessionId: null,\n};\n\n/**\n * Access the ONCHAIN_KIT_CONFIG object directly by providing the key.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const getOnchainKitConfig = <K extends keyof typeof ONCHAIN_KIT_CONFIG>(\n  configName: K,\n): (typeof ONCHAIN_KIT_CONFIG)[K] => {\n  return ONCHAIN_KIT_CONFIG[configName];\n};\n\n/**\n * Update the ONCHAIN_KIT_CONFIG object directly by providing the properties to update.\n * This is powerful when you use OnchainKit utilities outside of the React context.\n */\nexport const setOnchainKitConfig = (properties: SetOnchainKitConfig) => {\n  Object.assign(ONCHAIN_KIT_CONFIG, properties);\n  return getOnchainKitConfig;\n};\n", "import { http, cookieStorage, createConfig, createStorage } from 'wagmi';\nimport { base, baseSepolia } from 'wagmi/chains';\nimport { coinbaseWallet } from 'wagmi/connectors';\nimport type { CreateWagmiConfigParams } from './types';\n\n/**\n * createWagmiConfig returns a WagmiConfig (https://wagmi.sh/react/api/createConfig) using OnchainKit provided settings.\n * This function should only be used if the user does not provide WagmiProvider as a parent in the React context.\n */\nexport const createWagmiConfig = ({\n  apiKey,\n  appName,\n  appLogoUrl,\n  connectors = [\n    coinbaseWallet({\n      appName,\n      appLogoUrl,\n      preference: 'all',\n    }),\n  ],\n}: CreateWagmiConfigParams) => {\n  return createConfig({\n    chains: [base, baseSepolia],\n    connectors,\n    storage: createStorage({\n      storage: cookieStorage,\n    }),\n    ssr: true,\n    transports: {\n      [base.id]: apiKey\n        ? http(`https://api.developer.coinbase.com/rpc/v1/base/${apiKey}`)\n        : http(),\n      [baseSepolia.id]: apiKey\n        ? http(\n            `https://api.developer.coinbase.com/rpc/v1/base-sepolia/${apiKey}`,\n          )\n        : http(),\n    },\n  });\n};\n", "import { type QueryClient, useQueryClient } from '@tanstack/react-query';\nimport { useMemo } from 'react';\nimport { type Config, WagmiProviderNotFoundError, useConfig } from 'wagmi';\n\n/** useProviderDependencies will return the provided Wagmi configuration and QueryClient if they exist in the React context, otherwise it will return null\n * NotFound errors will fail gracefully\n * Unexpected errors will be logged to the console as an error, and will return null for the problematic dependency\n */\nexport function useProviderDependencies() {\n  /** Check the context for WagmiProvider\n   * Wagmi configuration defaults to the provided config if it exists\n   * Otherwise, use the OnchainKit-provided Wagmi configuration\n   */\n  let providedWagmiConfig: Config | null = null;\n  let providedQueryClient: QueryClient | null = null;\n\n  try {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    providedWagmiConfig = useConfig();\n  } catch (error) {\n    if (!(error instanceof WagmiProviderNotFoundError)) {\n      console.error('Error fetching WagmiProvider, using default:', error);\n    }\n  }\n\n  try {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    providedQueryClient = useQueryClient();\n  } catch (error) {\n    if (\n      !(\n        (error as Error).message ===\n        'No QueryClient set, use QueryClientProvider to set one'\n      )\n    ) {\n      console.error('Error fetching QueryClient, using default:', error);\n    }\n  }\n\n  return useMemo(() => {\n    return {\n      providedWagmiConfig,\n      providedQueryClient,\n    };\n  }, [providedWagmiConfig, providedQueryClient]);\n}\n", "import { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { type PropsWithChildren, useMemo } from 'react';\nimport { WagmiProvider } from 'wagmi';\nimport { coinbaseWallet } from 'wagmi/connectors';\nimport { createWagmiConfig } from './core/createWagmiConfig';\nimport type { CreateWagmiConfigParams } from './core/types';\nimport { useProviderDependencies } from './internal/hooks/useProviderDependencies';\n\nexport function DefaultOnchainKitProviders({\n  apiKey,\n  appName,\n  appLogoUrl,\n  connectors = [\n    coinbaseWallet({\n      appName,\n      appLogoUrl,\n      preference: 'all',\n    }),\n  ],\n  children,\n}: PropsWithChildren<CreateWagmiConfigParams>) {\n  // Check the React context for WagmiProvider and QueryClientProvider\n  const { providedWagmiConfig, providedQueryClient } =\n    useProviderDependencies();\n\n  const defaultConfig = useMemo(() => {\n    // IMPORTANT: Don't create a new Wagmi configuration if one already exists\n    // This prevents the user-provided WagmiConfig from being overridden\n    return (\n      providedWagmiConfig ||\n      createWagmiConfig({\n        apiKey,\n        appName,\n        appLogoUrl,\n        connectors,\n      })\n    );\n  }, [apiKey, appName, appLogoUrl, connectors, providedWagmiConfig]);\n\n  const defaultQueryClient = useMemo(() => {\n    // IMPORTANT: Don't create a new QueryClient if one already exists\n    // This prevents the user-provided QueryClient from being overridden\n    return providedQueryClient || new QueryClient();\n  }, [providedQueryClient]);\n\n  // If both dependencies are missing, return a context with default parent providers\n  // If only one dependency is provided, expect the user to also provide the missing one\n  if (!providedWagmiConfig && !providedQueryClient) {\n    return (\n      <WagmiProvider config={defaultConfig}>\n        <QueryClientProvider client={defaultQueryClient}>\n          {children}\n        </QueryClientProvider>\n      </WagmiProvider>\n    );\n  }\n\n  return children;\n}\n", "export const ANALYTICS_API_URL = 'https://api.developer.coinbase.com/analytics';\n\n/**\n * Analytics event names\n */\nexport const ANALYTICS_EVENTS = {\n  // Appchain events\n  APPCHAIN_BRIDGE_DEPOSIT_INITIATED: 'appchainBridgeDepositInitiated',\n  APPCHAIN_BRIDGE_DEPOSIT_SUCCESS: 'appchainBridgeDepositSuccess',\n  APPCHAIN_BRIDGE_DEPOSIT_FAILURE: 'appchainBridgeDepositFailure',\n  APPCHAIN_BRIDGE_WITHDRAW_INITIATED: 'appchainBridgeWithdrawInitiated',\n  APPCHAIN_BRIDGE_WITHDRAW_SUCCESS: 'appchainBridgeWithdrawSuccess',\n  APPCHAIN_BRIDGE_WITHDRAW_FAILURE: 'appchainBridgeWithdrawFailure',\n  APPCHAIN_BRIDGE_WAIT_FOR_CLAIM_FAILURE: 'appchainBridgeWaitForClaimFailure',\n  APPCHAIN_BRIDGE_CLAIM_SUCCESS: 'appchainBridgeClaimSuccess',\n  APPCHAIN_BRIDGE_CLAIM_FAILURE: 'appchainBridgeClaimFailure',\n\n  // Buy events\n  BUY_FAILURE: 'buyFailure',\n  BUY_INITIATED: 'buyInitiated',\n  BUY_OPTION_SELECTED: 'buyOptionSelected',\n  BUY_SUCCESS: 'buySuccess',\n  BUY_CANCELED: 'buyCanceled',\n\n  // Checkout events\n  CHECKOUT_FAILURE: 'checkoutFailure',\n  CHECKOUT_INITIATED: 'checkoutInitiated',\n  CHECKOUT_SUCCESS: 'checkoutSuccess',\n  CHECKOUT_CANCELED: 'checkoutCanceled',\n\n  // Error events\n  COMPONENT_ERROR: 'componentError',\n\n  // Fund events\n  FUND_AMOUNT_CHANGED: 'fundAmountChanged',\n  FUND_FAILURE: 'fundFailure',\n  FUND_INITIATED: 'fundInitiated',\n  FUND_OPTION_SELECTED: 'fundOptionSelected',\n  FUND_SUCCESS: 'fundSuccess',\n  FUND_CANCELED: 'fundCanceled',\n\n  // Mint events\n  MINT_FAILURE: 'mintFailure',\n  MINT_INITIATED: 'mintInitiated',\n  MINT_QUANTITY_CHANGED: 'mintQuantityChanged',\n  MINT_SUCCESS: 'mintSuccess',\n  MINT_CANCELED: 'mintCanceled',\n\n  // Swap events\n  SWAP_FAILURE: 'swapFailure',\n  SWAP_INITIATED: 'swapInitiated',\n  SWAP_SLIPPAGE_CHANGED: 'swapSlippageChanged',\n  SWAP_SUCCESS: 'swapSuccess',\n  SWAP_TOKEN_SELECTED: 'swapTokenSelected',\n  SWAP_CANCELED: 'swapCanceled',\n\n  // Transaction events\n  TRANSACTION_FAILURE: 'transactionFailure',\n  TRANSACTION_INITIATED: 'transactionInitiated',\n  TRANSACTION_SUCCESS: 'transactionSuccess',\n  TRANSACTION_CANCELED: 'transactionCanceled',\n\n  // Wallet events\n  WALLET_CONNECT_ERROR: 'walletConnectError',\n  WALLET_CONNECT_INITIATED: 'walletConnectInitiated',\n  WALLET_CONNECT_SUCCESS: 'walletConnectSuccess',\n  WALLET_DISCONNECT: 'walletDisconnect',\n  WALLET_OPTION_SELECTED: 'walletOptionSelected',\n  WALLET_CONNECT_CANCELED: 'walletConnectCanceled',\n\n  // Earn events\n  EARN_DEPOSIT_INITIATED: 'earnDepositInitiated',\n  EARN_DEPOSIT_SUCCESS: 'earnDepositSuccess',\n  EARN_DEPOSIT_FAILURE: 'earnDepositFailure',\n  EARN_DEPOSIT_CANCELED: 'earnDepositCanceled',\n  EARN_WITHDRAW_INITIATED: 'earnWithdrawInitiated',\n  EARN_WITHDRAW_SUCCESS: 'earnWithdrawSuccess',\n  EARN_WITHDRAW_FAILURE: 'earnWithdrawFailure',\n  EARN_WITHDRAW_CANCELED: 'earnWithdrawCanceled',\n} as const;\n\n/**\n * Component names for error tracking\n */\nexport const COMPONENT_NAMES = {\n  BUY: 'buy',\n  CHECKOUT: 'checkout',\n  FUND: 'fund',\n  MINT: 'mint',\n  SWAP: 'swap',\n  TRANSACTION: 'transaction',\n  WALLET: 'wallet',\n  EARN: 'earn',\n} as const;\n\n/**\n * Buy options\n */\nexport const BUY_OPTIONS = {\n  APPLE_PAY: 'apple_pay',\n  COINBASE: 'coinbase_account',\n  DEBIT_CARD: 'debit_card',\n  ETH: 'eth',\n  USDC: 'usdc',\n} as const;\n\n/**\n * Fund options\n */\nexport const FUND_OPTIONS = {\n  APPLE_PAY: 'apple_pay',\n  COINBASE: 'coinbase_account',\n  DEBIT_CARD: 'debit_card',\n} as const;\n", "export const version = '0.38.7';\n", "import { version } from '../../version';\n\nexport const POST_METHOD = 'POST';\nexport const JSON_HEADERS = {\n  'Content-Type': 'application/json',\n  'OnchainKit-Version': version,\n};\nexport const CONTEXT_HEADER = 'OnchainKit-Context';\nexport const JSON_RPC_VERSION = '2.0';\n\n/**\n * Internal - The context where the request originated\n *\n * @enum {string}\n * @readonly\n */\nexport enum RequestContext {\n  API = 'api',\n  Buy = 'buy',\n  Checkout = 'checkout',\n  Hook = 'hook',\n  NFT = 'nft',\n  Swap = 'swap',\n  Wallet = 'wallet',\n}\n", "import { JSON_HEADERS } from '@/core/network/constants';\n\nexport type AnalyticsRequestParams = {\n  url: string;\n  headers: Record<string, string>;\n  body: {\n    apiKey: string;\n    sessionId: string;\n    timestamp: number;\n    eventType: string;\n    data: Record<string, unknown>;\n    origin: string;\n  };\n};\n\n/**\n * sendAnalytics sends telemetry data to the specified server endpoint.\n */\nexport const sendAnalytics = async (request: AnalyticsRequestParams) => {\n  try {\n    await fetch(request.url, {\n      method: 'POST',\n      headers: {\n        ...JSON_HEADERS,\n        ...request.headers,\n      },\n      body: JSON.stringify(request.body),\n    });\n  } catch (error) {\n    // Silently fail\n    if (process.env.NODE_ENV !== 'production') {\n      console.error('Error sending analytics:', error);\n    }\n  }\n};\n", "import { getOnchainKitConfig } from '@/core/OnchainKitConfig';\nimport { ANALYTICS_API_URL } from '@/core/analytics/constants';\nimport type {\n  AnalyticsEvent,\n  AnalyticsEventData,\n} from '@/core/analytics/types';\nimport { sendAnalytics } from '@/core/analytics/utils/sendAnalytics';\nimport { useMemo } from 'react';\n\nconst prepareAnalyticsPayload = <T extends AnalyticsEvent>(\n  event: T,\n  data: AnalyticsEventData[T],\n) => {\n  const config = getOnchainKitConfig('config');\n\n  return {\n    url: config?.analyticsUrl ?? ANALYTICS_API_URL,\n    headers: {\n      'OnchainKit-App-Name': document.title,\n    },\n    body: {\n      apiKey: getOnchainKitConfig('apiKey') ?? 'undefined',\n      sessionId: getOnchainKitConfig('sessionId') ?? 'undefined',\n      timestamp: Date.now(),\n      eventType: event,\n      data,\n      origin: window.location.origin,\n    },\n  };\n};\n\nexport function sendAnalyticsPayload<T extends AnalyticsEvent>(\n  event: T,\n  data: AnalyticsEventData[T],\n): void {\n  // Don't send analytics if disabled\n  const config = getOnchainKitConfig('config');\n\n  if (!config?.analytics) {\n    return;\n  }\n  const payload = prepareAnalyticsPayload(event, data);\n  sendAnalytics(payload);\n}\n\n/**\n * useAnalytics handles analytics events and data preparation\n */\nexport const useAnalytics = () => {\n  return useMemo(\n    () => ({\n      sendAnalytics: sendAnalyticsPayload,\n    }),\n    [],\n  );\n};\n", "/**\n * Component-specific events\n */\n\nimport type { Hex } from 'viem';\n\n/**\n * Wallet component events - Tracks all possible wallet interaction states\n * Used to monitor wallet connection flow and user interactions\n */\nexport enum WalletEvent {\n  /** Wallet connection fails */\n  ConnectError = 'walletConnectError',\n  /** User clicks connect wallet button */\n  ConnectInitiated = 'walletConnectInitiated',\n  /** Wallet successfully connected */\n  ConnectSuccess = 'walletConnectSuccess',\n  /** User disconnects wallet */\n  Disconnect = 'walletDisconnect',\n  /** User selects a wallet option */\n  OptionSelected = 'walletOptionSelected',\n  /** User cancels wallet connection */\n  ConnectCanceled = 'walletConnectCanceled',\n}\n\n/**\n * Wallet option - Available actions in the wallet interface\n * Used to track which wallet features users interact with\n */\nexport enum WalletOption {\n  Buy = 'buy',\n  Explorer = 'explorer',\n  QR = 'qr',\n  Refresh = 'refresh',\n  Send = 'send',\n  Swap = 'swap',\n}\n\n/**\n * Swap component events\n */\nexport enum SwapEvent {\n  SlippageChanged = 'swapSlippageChanged',\n  TokenSelected = 'swapTokenSelected',\n  SwapSuccess = 'swapSuccess',\n  SwapInitiated = 'swapInitiated',\n  SwapFailure = 'swapFailure',\n  SwapCanceled = 'swapCanceled',\n}\n\n/**\n * Buy option - Available payment methods for buying\n * Used to track which payment method users select\n */\nexport enum BuyOption {\n  APPLE_PAY = 'apple_pay',\n  COINBASE = 'coinbase_account',\n  DEBIT_CARD = 'debit_card',\n  ETH = 'eth',\n  USDC = 'usdc',\n}\n\n/**\n * Buy component events\n */\nexport enum BuyEvent {\n  BuyFailure = 'buyFailure',\n  BuyInitiated = 'buyInitiated',\n  BuyOptionSelected = 'buyOptionSelected',\n  BuySuccess = 'buySuccess',\n  BuyCanceled = 'buyCanceled',\n}\n\n/**\n * Checkout component events\n */\nexport enum CheckoutEvent {\n  CheckoutFailure = 'checkoutFailure',\n  CheckoutInitiated = 'checkoutInitiated',\n  CheckoutSuccess = 'checkoutSuccess',\n  CheckoutCanceled = 'checkoutCanceled',\n}\n\n/**\n * Mint component events\n */\nexport enum MintEvent {\n  MintFailure = 'mintFailure',\n  MintInitiated = 'mintInitiated',\n  MintQuantityChanged = 'mintQuantityChanged',\n  MintSuccess = 'mintSuccess',\n  MintCanceled = 'mintCanceled',\n}\n\n/**\n * Transaction component events\n */\nexport enum TransactionEvent {\n  TransactionFailure = 'transactionFailure',\n  TransactionInitiated = 'transactionInitiated',\n  TransactionSuccess = 'transactionSuccess',\n  TransactionCanceled = 'transactionCanceled',\n}\n\n/**\n * Fund component events\n */\nexport enum FundEvent {\n  FundAmountChanged = 'fundAmountChanged',\n  FundFailure = 'fundFailure',\n  FundInitiated = 'fundInitiated',\n  FundOptionSelected = 'fundOptionSelected',\n  FundSuccess = 'fundSuccess',\n  FundCanceled = 'fundCanceled',\n}\n\n/**\n * Earn component events\n */\nexport enum EarnEvent {\n  EarnDepositInitiated = 'earnDepositInitiated',\n  EarnDepositSuccess = 'earnDepositSuccess',\n  EarnDepositFailure = 'earnDepositFailure',\n  EarnDepositCanceled = 'earnDepositCanceled',\n  EarnWithdrawInitiated = 'earnWithdrawInitiated',\n  EarnWithdrawSuccess = 'earnWithdrawSuccess',\n  EarnWithdrawFailure = 'earnWithdrawFailure',\n  EarnWithdrawCanceled = 'earnWithdrawCanceled',\n}\n\n/**\n * Appchain component events\n */\nexport enum AppchainEvent {\n  AppchainBridgeDepositInitiated = 'appchainBridgeDepositInitiated',\n  AppchainBridgeDepositSuccess = 'appchainBridgeDepositSuccess',\n  AppchainBridgeDepositFailure = 'appchainBridgeDepositFailure',\n  AppchainBridgeWithdrawInitiated = 'appchainBridgeWithdrawInitiated',\n  AppchainBridgeWithdrawSuccess = 'appchainBridgeWithdrawSuccess',\n  AppchainBridgeWithdrawFailure = 'appchainBridgeWithdrawFailure',\n  AppchainBridgeWaitForClaimFailure = 'appchainBridgeWaitForClaimFailure',\n  AppchainBridgeClaimSuccess = 'appchainBridgeClaimSuccess',\n  AppchainBridgeClaimFailure = 'appchainBridgeClaimFailure',\n}\n\n/**\n * Generic error events across components\n * Used for error tracking and monitoring\n */\nexport enum ErrorEvent {\n  ComponentError = 'componentError',\n}\n\n/**\n * Analytics event types\n * Combines all possible event types\n */\nexport type AnalyticsEvent =\n  | AppchainEvent\n  | WalletEvent\n  | SwapEvent\n  | BuyEvent\n  | CheckoutEvent\n  | MintEvent\n  | TransactionEvent\n  | FundEvent\n  | EarnEvent\n  | ErrorEvent;\n\n/**\n * Common analytics data included in all events\n * Provides basic context for every tracked event\n */\nexport type CommonAnalyticsData = {\n  /** Unique identifier for user session */\n  sessionId?: string;\n  timestamp?: number;\n};\n\nexport type AppchainEventData = {\n  [AppchainEvent.AppchainBridgeDepositInitiated]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeDepositSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeDepositFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawInitiated]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n    recipient: string;\n  };\n  [AppchainEvent.AppchainBridgeWithdrawFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n  [AppchainEvent.AppchainBridgeWaitForClaimFailure]: CommonAnalyticsData & {\n    transactionHash: Hex;\n  };\n  [AppchainEvent.AppchainBridgeClaimSuccess]: CommonAnalyticsData & {\n    amount: string;\n    tokenAddress: string;\n  };\n  [AppchainEvent.AppchainBridgeClaimFailure]: CommonAnalyticsData & {\n    error: string;\n  };\n};\n\nexport type WalletEventData = {\n  [WalletEvent.ConnectInitiated]: CommonAnalyticsData & {\n    /** Component used to connect wallet */\n    component: string;\n  };\n  [WalletEvent.ConnectError]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [WalletEvent.ConnectSuccess]: CommonAnalyticsData & {\n    address: string;\n    /** Coinbase, Metamask, Phantom, etc. */\n    walletProvider: string;\n  };\n  [WalletEvent.Disconnect]: CommonAnalyticsData & {\n    component: string;\n    walletProvider: string;\n  };\n  [WalletEvent.OptionSelected]: CommonAnalyticsData & {\n    option: WalletOption;\n  };\n  [WalletEvent.ConnectCanceled]: CommonAnalyticsData;\n};\n\nexport type SwapEventData = {\n  [SwapEvent.SlippageChanged]: CommonAnalyticsData & {\n    previousSlippage: number;\n    slippage: number;\n  };\n  [SwapEvent.TokenSelected]: CommonAnalyticsData & {\n    token: string;\n  };\n  [SwapEvent.SwapSuccess]: CommonAnalyticsData & {\n    paymaster: boolean;\n    transactionHash: string;\n    address: string;\n    amount: number;\n    from: string;\n    to: string;\n  };\n  [SwapEvent.SwapFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [SwapEvent.SwapInitiated]: CommonAnalyticsData & {\n    amount: number;\n  };\n  [SwapEvent.SwapCanceled]: CommonAnalyticsData;\n};\n\nexport type BuyEventData = {\n  [BuyEvent.BuyFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [BuyEvent.BuyInitiated]: CommonAnalyticsData & {\n    amount: number | undefined;\n    token: string | undefined;\n  };\n  [BuyEvent.BuyOptionSelected]: CommonAnalyticsData & {\n    option: BuyOption | undefined;\n  };\n  [BuyEvent.BuySuccess]: CommonAnalyticsData & {\n    address: string | undefined;\n    amount: number | undefined;\n    from: string | undefined;\n    paymaster: boolean | undefined;\n    to: string | undefined;\n    transactionHash: string | undefined;\n  };\n  [BuyEvent.BuyCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Checkout component events data\n */\nexport type CheckoutEventData = {\n  [CheckoutEvent.CheckoutSuccess]: CommonAnalyticsData & {\n    chargeHandlerId: string;\n    transactionHash: string | undefined;\n  };\n  [CheckoutEvent.CheckoutFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [CheckoutEvent.CheckoutInitiated]: CommonAnalyticsData & {\n    address: string | undefined;\n    amount: number;\n    productId: string;\n  };\n  [CheckoutEvent.CheckoutCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Mint component events data\n */\nexport type MintEventData = {\n  [MintEvent.MintFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [MintEvent.MintInitiated]: CommonAnalyticsData & {\n    contractAddress: string;\n    quantity: number;\n    tokenId: string;\n  };\n  [MintEvent.MintQuantityChanged]: CommonAnalyticsData & {\n    quantity: number;\n  };\n  [MintEvent.MintSuccess]: CommonAnalyticsData & {\n    address: string;\n    amountMinted: number;\n    contractAddress: string;\n    isSponsored: boolean;\n    tokenId: string;\n  };\n  [MintEvent.MintCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Transaction component events data\n */\nexport type TransactionEventData = {\n  [TransactionEvent.TransactionFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [TransactionEvent.TransactionInitiated]: CommonAnalyticsData & {\n    address: string | undefined;\n  };\n  [TransactionEvent.TransactionSuccess]: CommonAnalyticsData & {\n    paymaster: boolean | undefined;\n    address: string | undefined;\n    transactionHash: string | undefined;\n  };\n  [TransactionEvent.TransactionCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Fund component events data\n */\nexport type FundEventData = {\n  [FundEvent.FundAmountChanged]: CommonAnalyticsData & {\n    amount: number;\n    currency: string;\n  };\n  [FundEvent.FundFailure]: CommonAnalyticsData & {\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n  [FundEvent.FundInitiated]: CommonAnalyticsData & {\n    currency: string;\n  };\n  [FundEvent.FundOptionSelected]: CommonAnalyticsData & {\n    option: string;\n  };\n  [FundEvent.FundSuccess]: CommonAnalyticsData & {\n    address: string;\n    amount: number;\n    currency: string;\n    transactionHash: string;\n  };\n  [FundEvent.FundCanceled]: CommonAnalyticsData;\n};\n\n/**\n * Earn component events data\n */\nexport type EarnEventData = {\n  [EarnEvent.EarnDepositInitiated]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositSuccess]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositFailure]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnDepositCanceled]: CommonAnalyticsData;\n  [EarnEvent.EarnWithdrawInitiated]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawSuccess]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawFailure]: CommonAnalyticsData & {\n    amount: number;\n    address: string;\n    tokenAddress: string;\n    vaultAddress: string;\n  };\n  [EarnEvent.EarnWithdrawCanceled]: CommonAnalyticsData;\n};\n\n// Update main AnalyticsEventData type to include all component events\nexport type AnalyticsEventData = {\n  // Appchain events\n  [AppchainEvent.AppchainBridgeDepositInitiated]: AppchainEventData[AppchainEvent.AppchainBridgeDepositInitiated];\n  [AppchainEvent.AppchainBridgeDepositSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeDepositSuccess];\n  [AppchainEvent.AppchainBridgeDepositFailure]: AppchainEventData[AppchainEvent.AppchainBridgeDepositFailure];\n  [AppchainEvent.AppchainBridgeWithdrawInitiated]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawInitiated];\n  [AppchainEvent.AppchainBridgeWithdrawSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawSuccess];\n  [AppchainEvent.AppchainBridgeWithdrawFailure]: AppchainEventData[AppchainEvent.AppchainBridgeWithdrawFailure];\n  [AppchainEvent.AppchainBridgeWaitForClaimFailure]: AppchainEventData[AppchainEvent.AppchainBridgeWaitForClaimFailure];\n  [AppchainEvent.AppchainBridgeClaimSuccess]: AppchainEventData[AppchainEvent.AppchainBridgeClaimSuccess];\n  [AppchainEvent.AppchainBridgeClaimFailure]: AppchainEventData[AppchainEvent.AppchainBridgeClaimFailure];\n\n  // Wallet events\n  [WalletEvent.ConnectError]: WalletEventData[WalletEvent.ConnectError];\n  [WalletEvent.ConnectInitiated]: WalletEventData[WalletEvent.ConnectInitiated];\n  [WalletEvent.ConnectSuccess]: WalletEventData[WalletEvent.ConnectSuccess];\n  [WalletEvent.Disconnect]: WalletEventData[WalletEvent.Disconnect];\n  [WalletEvent.OptionSelected]: CommonAnalyticsData & {\n    option: WalletOption;\n  };\n  [WalletEvent.ConnectCanceled]: WalletEventData[WalletEvent.ConnectCanceled];\n\n  // Swap events\n  [SwapEvent.SlippageChanged]: SwapEventData[SwapEvent.SlippageChanged];\n  [SwapEvent.TokenSelected]: SwapEventData[SwapEvent.TokenSelected];\n  [SwapEvent.SwapSuccess]: SwapEventData[SwapEvent.SwapSuccess];\n  [SwapEvent.SwapFailure]: SwapEventData[SwapEvent.SwapFailure];\n  [SwapEvent.SwapInitiated]: SwapEventData[SwapEvent.SwapInitiated];\n  [SwapEvent.SwapCanceled]: SwapEventData[SwapEvent.SwapCanceled];\n\n  // Buy events\n  [BuyEvent.BuyFailure]: BuyEventData[BuyEvent.BuyFailure];\n  [BuyEvent.BuyInitiated]: BuyEventData[BuyEvent.BuyInitiated];\n  [BuyEvent.BuyOptionSelected]: BuyEventData[BuyEvent.BuyOptionSelected];\n  [BuyEvent.BuySuccess]: BuyEventData[BuyEvent.BuySuccess];\n  [BuyEvent.BuyCanceled]: BuyEventData[BuyEvent.BuyCanceled];\n\n  // Checkout events\n  [CheckoutEvent.CheckoutFailure]: CheckoutEventData[CheckoutEvent.CheckoutFailure];\n  [CheckoutEvent.CheckoutInitiated]: CheckoutEventData[CheckoutEvent.CheckoutInitiated];\n  [CheckoutEvent.CheckoutSuccess]: CheckoutEventData[CheckoutEvent.CheckoutSuccess];\n  [CheckoutEvent.CheckoutCanceled]: CheckoutEventData[CheckoutEvent.CheckoutCanceled];\n\n  // Mint events\n  [MintEvent.MintFailure]: MintEventData[MintEvent.MintFailure];\n  [MintEvent.MintInitiated]: MintEventData[MintEvent.MintInitiated];\n  [MintEvent.MintQuantityChanged]: MintEventData[MintEvent.MintQuantityChanged];\n  [MintEvent.MintSuccess]: MintEventData[MintEvent.MintSuccess];\n  [MintEvent.MintCanceled]: MintEventData[MintEvent.MintCanceled];\n\n  // Transaction events\n  [TransactionEvent.TransactionFailure]: TransactionEventData[TransactionEvent.TransactionFailure];\n  [TransactionEvent.TransactionInitiated]: TransactionEventData[TransactionEvent.TransactionInitiated];\n  [TransactionEvent.TransactionSuccess]: TransactionEventData[TransactionEvent.TransactionSuccess];\n  [TransactionEvent.TransactionCanceled]: TransactionEventData[TransactionEvent.TransactionCanceled];\n\n  // Fund events\n  [FundEvent.FundAmountChanged]: FundEventData[FundEvent.FundAmountChanged];\n  [FundEvent.FundFailure]: FundEventData[FundEvent.FundFailure];\n  [FundEvent.FundInitiated]: FundEventData[FundEvent.FundInitiated];\n  [FundEvent.FundOptionSelected]: FundEventData[FundEvent.FundOptionSelected];\n  [FundEvent.FundSuccess]: FundEventData[FundEvent.FundSuccess];\n  [FundEvent.FundCanceled]: FundEventData[FundEvent.FundCanceled];\n\n  // Earn events\n  [EarnEvent.EarnDepositInitiated]: EarnEventData[EarnEvent.EarnDepositInitiated];\n  [EarnEvent.EarnDepositSuccess]: EarnEventData[EarnEvent.EarnDepositSuccess];\n  [EarnEvent.EarnDepositFailure]: EarnEventData[EarnEvent.EarnDepositFailure];\n  [EarnEvent.EarnDepositCanceled]: EarnEventData[EarnEvent.EarnDepositCanceled];\n  [EarnEvent.EarnWithdrawInitiated]: EarnEventData[EarnEvent.EarnWithdrawInitiated];\n  [EarnEvent.EarnWithdrawSuccess]: EarnEventData[EarnEvent.EarnWithdrawSuccess];\n  [EarnEvent.EarnWithdrawFailure]: EarnEventData[EarnEvent.EarnWithdrawFailure];\n  [EarnEvent.EarnWithdrawCanceled]: EarnEventData[EarnEvent.EarnWithdrawCanceled];\n\n  // Error events\n  [ErrorEvent.ComponentError]: CommonAnalyticsData & {\n    component: string;\n    error: string;\n    metadata: Record<string, unknown> | undefined;\n  };\n};\n", "import {\n  Component,\n  type ComponentType,\n  type ErrorInfo,\n  type ReactNode,\n} from 'react';\nimport { sendAnalyticsPayload } from './core/analytics/hooks/useAnalytics';\nimport { ErrorEvent } from './core/analytics/types';\ntype Props = {\n  fallback?: ComponentType<{ error: Error }>;\n  children: ReactNode;\n};\n\ntype State = {\n  error: Error | null;\n};\n\nclass OnchainKitProviderBoundary extends Component<Props, State> {\n  state: State = {\n    error: null,\n  };\n\n  static getDerivedStateFromError(error: Error): State {\n    return { error };\n  }\n\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo);\n\n    sendAnalyticsPayload(ErrorEvent.ComponentError, {\n      component: 'OnchainKitProviderBoundary',\n      error: error.message,\n      metadata: {\n        message: error.message,\n        stack: errorInfo.componentStack,\n      },\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      if (this.props.fallback) {\n        const Fallback = this.props.fallback;\n        return <Fallback error={this.state.error} />;\n      }\n      return <h1>Sorry, we had an unhandled error</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default OnchainKitProviderBoundary;\n", "// Capabilities\nexport enum Capabilities {\n  AtomicBatch = 'atomicBatch',\n  AuxiliaryFunds = 'auxiliaryFunds',\n  PaymasterService = 'paymasterService',\n}\nexport const DEFAULT_PRIVACY_URL = 'https://base.org/privacy-policy';\nexport const DEFAULT_TERMS_URL = 'https://base.org/terms-of-service';\n", "import { base, baseSepolia } from 'viem/chains';\nimport type { EASSchemaUid, ResolverAddressesByChainIdMap } from './types';\n\nexport const RESOLVER_ADDRESSES_BY_CHAIN_ID: ResolverAddressesByChainIdMap = {\n  [baseSepolia.id]: '0x6533C94869D28fAA8dF77cc63f9e2b2D6Cf77eBA',\n  [base.id]: '0xC6d566A56A1aFf6508b41f6c90ff131615583BCD',\n};\n\n// Basename default profile pictures\nconst BASE_DEFAULT_PROFILE_PICTURES1 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72801)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2596.93 1721.27C2605.58 1648.75 2610.21 1574.9 2610.21 1500C2610.21 1425.1 2605.58 1351.4 2596.93 1278.73C2770.3 1177.28 2815.96 914.534 2631.1 772.941C2553.96 713.858 2472.05 660.593 2385.96 614.042C2339.26 528.102 2286.14 446.041 2227.06 368.904C2085.47 184.192 1822.72 229.699 1721.27 403.071C1648.75 394.417 1574.9 389.792 1500 389.792C1425.1 389.792 1351.4 394.417 1278.73 403.071C1177.28 229.699 914.534 184.043 772.941 368.904C713.858 446.041 660.593 527.953 614.042 614.042C528.102 660.742 446.041 713.858 368.904 772.941C184.192 914.534 229.699 1177.28 403.071 1278.73C394.417 1351.25 389.792 1425.1 389.792 1500C389.792 1574.9 394.417 1648.6 403.071 1721.27C229.699 1822.72 184.043 2085.47 368.904 2227.06C446.041 2286.14 527.953 2339.41 614.042 2385.96C660.742 2471.9 713.858 2553.96 772.941 2631.1C914.534 2815.81 1177.28 2770.3 1278.73 2596.93C1351.25 2605.58 1425.1 2610.21 1500 2610.21C1574.9 2610.21 1648.6 2605.58 1721.27 2596.93C1822.72 2770.3 2085.47 2815.96 2227.06 2631.1C2286.14 2553.96 2339.41 2472.05 2385.96 2385.96C2471.9 2339.26 2553.96 2286.14 2631.1 2227.06C2815.81 2085.47 2770.3 1822.72 2596.93 1721.27Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.13 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.13 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72801\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES2 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72809)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2188.12 1131.95C2691.11 591.187 2356.8 256.94 1815.91 759.826C1767.57 804.826 1737.56 866.494 1733.32 932.403C1733.32 933.767 1733.17 934.979 1733.02 936.343C1722.56 1094.68 1853.35 1225.44 2011.72 1214.98C2013.08 1214.98 2014.29 1214.83 2015.66 1214.68C2081.58 1210.44 2143.26 1180.44 2188.27 1132.1L2188.12 1131.95Z\" fill=\"white\"/><path d=\"M759.879 1816.05C256.885 2356.81 591.204 2691.06 1132.08 2188.17C1180.43 2143.17 1210.44 2081.51 1214.68 2015.6C1214.68 2014.23 1214.83 2013.02 1214.98 2011.66C1225.44 1853.32 1094.65 1722.56 936.283 1733.02C934.919 1733.02 933.706 1733.17 932.342 1733.32C866.418 1737.56 804.738 1767.56 759.727 1815.9L759.879 1816.05Z\" fill=\"white\"/><path d=\"M1131.96 759.922C591.247 256.826 256.881 591.264 759.869 1132.09C804.865 1180.43 866.527 1210.44 932.431 1214.68C933.794 1214.68 935.006 1214.83 936.37 1214.98C1094.69 1225.44 1225.44 1094.66 1214.98 936.309C1214.98 934.946 1214.83 933.733 1214.68 932.369C1210.44 866.452 1180.44 804.777 1132.11 759.771L1131.96 759.922Z\" fill=\"white\"/><path d=\"M1816.05 2188.12C2356.81 2691.11 2691.06 2356.8 2188.17 1815.91C2143.17 1767.57 2081.51 1737.56 2015.6 1733.32C2014.23 1733.32 2013.02 1733.17 2011.66 1733.02C1853.32 1722.56 1722.56 1853.35 1733.02 2011.72C1733.02 2013.08 1733.17 2014.29 1733.32 2015.66C1737.56 2081.58 1767.56 2143.26 1815.9 2188.27L1816.05 2188.12Z\" fill=\"white\"/><path d=\"M1737.18 727.02C1710.36 -10.3398 1237.66 -10.3398 1210.84 727.02C1208.42 792.869 1230.84 857.658 1274.48 907.31C1275.39 908.37 1276.14 909.278 1277.05 910.338C1381.59 1029.62 1566.43 1029.62 1670.97 910.338C1671.88 909.278 1672.63 908.37 1673.54 907.31C1717.18 857.81 1739.45 793.02 1737.18 727.02Z\" fill=\"white\"/><path d=\"M727.02 1210.82C-10.3398 1237.64 -10.3398 1710.34 727.02 1737.16C792.869 1739.58 857.658 1717.16 907.31 1673.52C908.218 1672.62 909.278 1671.86 910.338 1670.95C1029.62 1566.41 1029.62 1381.57 910.338 1277.03C909.278 1276.12 908.37 1275.37 907.31 1274.46C857.81 1230.82 793.02 1208.55 727.02 1210.82Z\" fill=\"white\"/><path d=\"M2040.69 1274.48C2039.63 1275.39 2038.72 1276.14 2037.66 1277.05C1918.38 1381.59 1918.38 1566.43 2037.66 1670.97C2038.72 1671.88 2039.63 1672.63 2040.69 1673.54C2090.19 1717.18 2154.98 1739.45 2220.98 1737.18C2958.34 1710.36 2958.34 1237.66 2220.98 1210.84C2155.13 1208.42 2090.34 1230.84 2040.69 1274.48Z\" fill=\"white\"/><path d=\"M1210.82 2220.98C1237.64 2958.34 1710.34 2958.34 1737.16 2220.98C1739.58 2155.13 1717.16 2090.34 1673.52 2040.69C1672.62 2039.63 1671.86 2038.72 1670.95 2037.66C1566.41 1918.38 1381.57 1918.38 1277.03 2037.66C1276.12 2038.72 1275.37 2039.63 1274.46 2040.69C1230.82 2090.19 1208.55 2154.98 1210.82 2220.98Z\" fill=\"white\"/><circle cx=\"1474.5\" cy=\"1474.5\" r=\"886.5\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.16 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72809\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES3 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72826)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M587.596 2230.75C839.799 2148.27 1126.41 2048.74 1282.85 1934.35C1406.13 1849.79 1458.98 1757.13 1483.16 1651.34C1488.13 1629.73 1511.93 1629.73 1516.8 1651.34C1540.98 1757.01 1593.83 1849.67 1717.11 1934.35C1873.55 2048.74 2160.26 2148.28 2412.36 2230.75C2681.77 2308.44 2735.86 2334.34 2656.73 2207.31C2588.97 2088.63 2388.28 1817.51 2407.39 1489.82C2407.39 1489.21 2407.39 1488.59 2407.39 1487.86C2397.17 1162.25 2598.34 899.36 2662.18 786.079C2737.77 664.821 2675.65 693.54 2406.72 771.597C2154.43 854.195 1870.3 953.362 1715.2 1067.5C1593.25 1151.7 1540.79 1203.99 1516.8 1309.05C1511.83 1330.65 1488.03 1330.65 1483.16 1309.05C1459.17 1203.87 1406.71 1151.7 1284.76 1067.5C1129.66 953.362 845.533 854.195 593.234 771.597C324.307 693.54 262.284 664.821 337.782 786.079C401.621 899.36 602.791 1162.37 592.47 1488.1C592.47 1488.72 592.47 1489.33 592.47 1490.07C611.583 1817.76 410.891 2088.87 343.134 2207.55C264.004 2334.46 318.095 2308.68 587.5 2231L587.596 2230.75Z\" fill=\"white\"/><path d=\"M769.249 587.596C851.725 839.799 951.26 1126.41 1065.65 1282.85C1150.21 1406.13 1242.87 1458.98 1348.66 1483.16C1370.26 1488.13 1370.26 1511.93 1348.66 1516.8C1242.99 1540.98 1150.33 1593.83 1065.65 1717.11C951.26 1873.55 851.725 2160.26 769.249 2412.36C691.56 2681.77 665.664 2735.86 792.691 2656.73C911.372 2588.97 1182.49 2388.28 1510.18 2407.39C1510.79 2407.39 1511.41 2407.39 1512.14 2407.39C1837.75 2397.17 2100.64 2598.34 2213.92 2662.18C2335.18 2737.77 2306.46 2675.65 2228.4 2406.72C2145.8 2154.43 2046.64 1870.3 1932.5 1715.2C1848.3 1593.25 1796.01 1540.79 1690.95 1516.8C1669.35 1511.83 1669.35 1488.03 1690.95 1483.16C1796.13 1459.17 1848.3 1406.71 1932.5 1284.76C2046.64 1129.66 2145.8 845.533 2228.4 593.234C2306.46 324.307 2335.18 262.284 2213.92 337.782C2100.64 401.621 1837.63 602.791 1511.9 592.47C1511.28 592.47 1510.67 592.47 1509.93 592.47C1182.24 611.583 911.127 410.891 792.446 343.134C665.541 264.004 691.315 318.095 769.004 587.5L769.249 587.596Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1352.11 1358.4 1218.38 1305.74 1121.72C1253.03 1024.95 1180.69 966 1101.53 966C1022.36 966 950.031 1024.95 897.314 1121.72C844.66 1218.38 812 1352.11 812 1500C812 1647.89 844.66 1781.62 897.314 1878.28C950.031 1975.05 1022.36 2034 1101.53 2034C1180.69 2034 1253.03 1975.05 1305.74 1878.28C1358.4 1781.62 1391.06 1647.89 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 976.159 2037)\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1352.11 2154.5 1218.38 2101.84 1121.72C2049.12 1024.95 1976.79 966 1897.63 966C1818.46 966 1746.13 1024.95 1693.41 1121.72C1640.76 1218.38 1608.1 1352.11 1608.1 1500C1608.1 1647.89 1640.76 1781.62 1693.41 1878.28C1746.13 1975.05 1818.46 2034 1897.63 2034C1976.79 2034 2049.12 1975.05 2101.84 1878.28C2154.5 1781.62 2187.16 1647.89 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"126.414\" cy=\"231.934\" rx=\"126.414\" ry=\"231.934\" transform=\"matrix(1 0 0 -1 1770.17 2037)\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72826\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES4 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72835)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2713.13 1500C2731.2 1680.92 2615.13 1818.15 2507.78 1924.42C2394.7 2032.13 2290.44 2108.88 2200.88 2200.61C2109.15 2290.16 2032.22 2394.61 1924.51 2507.68C1818.15 2615.04 1680.92 2731.11 1500 2713.13C1319.08 2731.2 1181.85 2615.13 1075.58 2507.78C967.866 2394.7 891.12 2290.44 799.389 2200.88C709.837 2109.15 605.39 2032.22 492.315 1924.51C384.962 1818.15 268.89 1680.92 286.873 1500C268.799 1319.08 384.871 1181.85 492.224 1075.58C605.299 967.866 709.564 891.12 799.116 799.389C890.848 709.837 967.775 605.39 1075.49 492.315C1181.85 384.871 1319.08 268.799 1500 286.873C1680.92 268.799 1818.15 384.871 1924.42 492.224C2032.13 605.299 2108.88 709.564 2200.61 799.116C2290.16 890.848 2394.61 967.775 2507.68 1075.49C2615.04 1181.85 2731.11 1319.08 2713.13 1500Z\" fill=\"white\"/><path d=\"M1391.06 1500C1391.06 1647.89 1358.4 1781.62 1305.74 1878.28C1253.03 1975.05 1180.69 2034 1101.53 2034C1022.36 2034 950.031 1975.05 897.314 1878.28C844.66 1781.62 812 1647.89 812 1500C812 1352.11 844.66 1218.38 897.314 1121.72C950.031 1024.95 1022.36 966 1101.53 966C1180.69 966 1253.03 1024.95 1305.74 1121.72C1358.4 1218.38 1391.06 1352.11 1391.06 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1102.57\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/><path d=\"M2187.16 1500C2187.16 1647.89 2154.5 1781.62 2101.84 1878.28C2049.12 1975.05 1976.79 2034 1897.63 2034C1818.46 2034 1746.13 1975.05 1693.41 1878.28C1640.76 1781.62 1608.1 1647.89 1608.1 1500C1608.1 1352.11 1640.76 1218.38 1693.41 1121.72C1746.13 1024.95 1818.46 966 1897.63 966C1976.79 966 2049.12 1024.95 2101.84 1121.72C2154.5 1218.38 2187.16 1352.11 2187.16 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1896.58\" cy=\"1194.93\" rx=\"126.414\" ry=\"231.934\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72835\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES5 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72843)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2321.64 1500C3048.65 1727.51 2902.59 1900.1 2182.54 1787.44C2625.43 2169.27 2494.23 2265.93 1974.71 1974.53C2266.19 2493.97 2169.44 2625.34 1787.53 2182.54C1900.19 2902.68 1727.6 3048.65 1500 2321.64C1272.49 3048.65 1099.9 2902.59 1212.56 2182.54C830.733 2625.43 734.069 2494.23 1025.47 1974.71C506.03 2266.19 374.655 2169.44 817.464 1787.53C97.3173 1900.19 -48.6455 1727.6 678.356 1500C-48.6455 1272.49 97.4051 1099.9 817.464 1212.56C374.567 830.733 505.767 734.069 1025.29 1025.47C733.806 506.03 830.558 374.655 1212.47 817.464C1099.81 97.3173 1272.4 -48.6455 1500 678.356C1727.51 -48.6455 1900.1 97.4051 1787.44 817.464C2169.27 374.567 2265.93 505.767 1974.53 1025.29C2493.97 733.806 2625.34 830.558 2182.54 1212.47C2902.68 1099.81 3048.65 1272.4 2321.64 1500Z\" fill=\"white\"/><path d=\"M1402.29 1500.15C1402.29 1632.88 1372.98 1752.91 1325.73 1839.64C1278.42 1926.48 1213.56 1979.29 1142.65 1979.29C1071.73 1979.29 1006.87 1926.48 959.562 1839.64C912.315 1752.91 883 1632.88 883 1500.15C883 1367.41 912.315 1247.38 959.562 1160.65C1006.87 1073.81 1071.73 1021 1142.65 1021C1213.56 1021 1278.42 1073.81 1325.73 1160.65C1372.98 1247.38 1402.29 1367.41 1402.29 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"998.466\" cy=\"1500.14\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/><path d=\"M2117.07 1500.15C2117.07 1632.88 2087.76 1752.91 2040.51 1839.64C1993.2 1926.48 1928.34 1979.29 1857.42 1979.29C1786.51 1979.29 1721.65 1926.48 1674.34 1839.64C1627.09 1752.91 1597.78 1632.88 1597.78 1500.15C1597.78 1367.41 1627.09 1247.38 1674.34 1160.65C1721.65 1073.81 1786.51 1021 1857.42 1021C1928.34 1021 1993.2 1073.81 2040.51 1160.65C2087.76 1247.38 2117.07 1367.41 2117.07 1500.15Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1712.74\" cy=\"1498.06\" rx=\"113.501\" ry=\"208.242\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72843\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES6 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72851)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M2538.7 1207.34C2483.17 1184.33 2431.23 1159.94 2382.18 1133.9C2398.44 1080.86 2417.87 1026.85 2440.88 971.324C2548.89 711.06 2287.94 450.106 2027.68 558.125C1972.15 581.134 1918.14 600.699 1865.1 616.819C1839.06 567.907 1814.67 515.827 1791.66 460.302C1684.05 199.899 1314.94 199.899 1207.34 460.302C1184.33 515.827 1159.94 567.769 1133.9 616.819C1080.86 600.561 1026.85 581.134 971.324 558.125C711.06 450.106 450.106 711.06 558.125 971.324C581.134 1026.85 600.699 1080.86 616.819 1133.9C567.907 1159.94 515.827 1184.33 460.302 1207.34C199.899 1314.94 199.899 1684.05 460.302 1791.66C515.827 1814.67 567.769 1839.06 616.819 1865.1C600.561 1918.14 581.134 1972.15 558.125 2027.68C450.106 2287.94 711.06 2548.89 971.324 2440.88C1026.85 2417.87 1080.86 2398.3 1133.9 2382.18C1159.94 2431.09 1184.33 2483.17 1207.34 2538.7C1314.94 2799.1 1684.05 2799.1 1791.66 2538.7C1814.67 2483.17 1839.06 2431.23 1865.1 2382.18C1918.14 2398.44 1972.15 2417.87 2027.68 2440.88C2287.94 2548.89 2548.89 2287.94 2440.88 2027.68C2417.87 1972.15 2398.3 1918.14 2382.18 1865.1C2431.09 1839.06 2483.17 1814.67 2538.7 1791.66C2799.1 1684.05 2799.1 1314.94 2538.7 1207.34ZM1735.31 1727.87C1732.83 1730.35 1730.35 1732.83 1727.87 1735.31C1697.42 1766.58 1662.15 1790.01 1624.53 1806.13C1587.47 1820.46 1547.24 1828.17 1504.94 1827.62C1501.36 1827.62 1497.92 1827.62 1494.33 1827.62C1452.04 1828.17 1411.67 1820.32 1374.74 1806.13C1337.13 1790.01 1301.86 1766.58 1271.41 1735.31C1268.93 1732.83 1266.45 1730.35 1263.97 1727.87C1232.69 1697.42 1209.27 1662.15 1193.15 1624.53C1178.82 1587.61 1171.1 1547.24 1171.65 1504.94C1171.65 1501.36 1171.65 1497.92 1171.65 1494.33C1171.1 1452.04 1178.96 1411.67 1193.15 1374.74C1209.27 1337.13 1232.69 1301.86 1263.97 1271.41C1266.45 1268.93 1268.93 1266.45 1271.41 1263.97C1301.86 1232.69 1337.13 1209.27 1374.74 1193.15C1411.67 1178.82 1452.04 1171.1 1494.33 1171.65C1497.92 1171.65 1501.36 1171.65 1504.94 1171.65C1547.24 1171.1 1587.61 1178.96 1624.53 1193.15C1662.15 1209.27 1697.42 1232.69 1727.87 1263.97C1730.35 1266.45 1732.83 1268.93 1735.31 1271.41C1766.58 1301.86 1790.01 1337.13 1806.13 1374.74C1820.46 1411.8 1828.17 1452.04 1827.62 1494.33C1827.62 1497.92 1827.62 1501.36 1827.62 1504.94C1828.17 1547.24 1820.32 1587.61 1806.13 1624.53C1790.01 1662.15 1766.58 1697.42 1735.31 1727.87Z\" fill=\"white\"/><circle cx=\"1476\" cy=\"1442\" r=\"443\" fill=\"white\"/><path d=\"M1400.59 1202.5C1400.59 1334.79 1371.37 1454.31 1324.38 1540.58C1277.28 1627.04 1213.04 1679 1143.3 1679C1073.56 1679 1009.31 1627.04 962.215 1540.58C915.221 1454.31 886 1334.79 886 1202.5C886 1070.21 915.221 950.688 962.215 864.42C1009.31 777.961 1073.56 726 1143.3 726C1213.04 726 1277.28 777.961 1324.38 864.42C1371.37 950.688 1400.59 1070.21 1400.59 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1141.26\" cy=\"931.03\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/><path d=\"M2114.41 1202.5C2114.41 1334.79 2085.19 1454.31 2038.19 1540.58C1991.1 1627.04 1926.85 1679 1857.11 1679C1787.37 1679 1723.13 1627.04 1676.03 1540.58C1629.04 1454.31 1599.82 1334.79 1599.82 1202.5C1599.82 1070.21 1629.04 950.688 1676.03 864.42C1723.13 777.961 1787.37 726 1857.11 726C1926.85 726 1991.1 777.961 2038.19 864.42C2085.19 950.688 2114.41 1070.21 2114.41 1202.5Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"10\"/><ellipse cx=\"1861.96\" cy=\"928.963\" rx=\"113.349\" ry=\"207.963\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72851\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\nconst BASE_DEFAULT_PROFILE_PICTURES7 = `<svg width=\"3000\" height=\"3000\" viewBox=\"0 0 3000 3000\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><g clip-path=\"url(#clip0_5569_72860)\"><rect width=\"3000\" height=\"3000\" fill=\"#155DFD\"/><circle cx=\"1500\" cy=\"1500\" r=\"1500\" fill=\"#155DFD\"/><path d=\"M1500.19 1499.87C1365.57 1351.79 1298.1 1205.48 1296.93 988.1C1296.16 779.052 1361.71 498.983 1502.29 274.909C1565.01 170.441 1645.1 119.866 1696.41 125.097C1750.22 129.37 1775.2 189.413 1785.5 284.511C1806.04 473.278 1775.29 803.798 1990.99 1009.07C2196.26 1224.77 2526.78 1194.09 2715.59 1214.68C2810.65 1224.78 2870.69 1249.84 2874.93 1303.61C2880.12 1354.96 2829.55 1435.05 2725.08 1497.77C2501.01 1638.35 2220.94 1703.91 2011.89 1703.13C1794.55 1702 1648.19 1634.49 1500.12 1499.87L1500.19 1499.87Z\" fill=\"white\"/><path d=\"M1499.98 1500.01C1634.61 1648.08 1702.07 1794.4 1703.24 2011.77C1704.02 2220.82 1638.47 2500.89 1497.89 2724.97C1435.16 2829.43 1355.07 2880.01 1303.77 2874.78C1249.96 2870.5 1224.97 2810.46 1214.68 2715.36C1194.13 2526.6 1224.89 2196.08 1009.18 1990.81C803.914 1775.1 473.394 1805.78 284.59 1785.2C189.528 1775.09 129.486 1750.03 125.249 1696.26C120.055 1644.91 170.63 1564.82 275.098 1502.1C499.172 1361.52 779.24 1295.97 988.289 1296.75C1205.63 1297.88 1351.98 1365.38 1500.06 1500.01L1499.98 1500.01Z\" fill=\"white\"/><path d=\"M1481.64 1518.29C1630.16 1383.18 1776.72 1315.24 1994.12 1313.37C2203.19 1311.92 2483.08 1376.57 2706.72 1516.45C2811 1578.84 2861.32 1658.78 2855.93 1710.11C2851.48 1763.93 2791.35 1789.12 2696.21 1799.72C2507.36 1820.87 2176.9 1791.18 1970.91 2007.57C1754.52 2213.55 1784.15 2544.01 1762.95 2732.9C1752.54 2828.01 1727.28 2888.14 1673.49 2892.55C1622.12 2897.91 1542.19 2847.58 1479.79 2743.31C1339.92 2519.66 1275.26 2239.77 1276.71 2030.7C1278.54 1813.33 1346.52 1666.75 1481.64 1518.22L1481.64 1518.29Z\" fill=\"white\"/><path d=\"M1481.81 1518.43C1333.29 1653.54 1186.74 1721.48 969.339 1723.34C760.267 1724.79 480.38 1660.13 256.734 1520.25C152.457 1457.85 102.133 1377.92 107.529 1326.59C111.975 1272.76 172.103 1247.58 267.243 1236.98C456.094 1215.83 786.549 1245.53 992.528 1029.15C1208.91 823.167 1179.28 492.713 1200.47 303.825C1210.92 208.685 1236.11 148.557 1289.93 144.111C1341.3 138.752 1421.23 189.076 1483.63 293.353C1623.51 516.999 1688.17 796.885 1686.72 1005.96C1684.9 1223.32 1616.92 1369.91 1481.81 1518.43Z\" fill=\"white\"/><path d=\"M1403.24 1500C1403.24 1630.77 1374.36 1749 1327.82 1834.44C1281.21 1919.99 1217.33 1972 1147.49 1972C1077.65 1972 1013.76 1919.99 967.153 1834.44C920.611 1749 891.731 1630.77 891.731 1500C891.731 1369.23 920.611 1251 967.153 1165.56C1013.76 1080.01 1077.65 1028 1147.49 1028C1217.33 1028 1281.21 1080.01 1327.82 1165.56C1374.36 1251 1403.24 1369.23 1403.24 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1148.41\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/><path d=\"M2107.42 1500C2107.42 1630.77 2078.55 1749 2032 1834.44C1985.4 1919.99 1921.51 1972 1851.67 1972C1781.83 1972 1717.94 1919.99 1671.34 1834.44C1624.79 1749 1595.92 1630.77 1595.92 1500C1595.92 1369.23 1624.79 1251 1671.34 1165.56C1717.94 1080.01 1781.83 1028 1851.67 1028C1921.51 1028 1985.4 1080.01 2032 1165.56C2078.55 1251 2107.42 1369.23 2107.42 1500Z\" fill=\"#155DFD\" stroke=\"white\" stroke-width=\"6\"/><ellipse cx=\"1850.75\" cy=\"1230.16\" rx=\"111.819\" ry=\"205.156\" fill=\"white\"/></g><defs><clipPath id=\"clip0_5569_72860\"><rect width=\"3000\" height=\"3000\" fill=\"white\"/></clipPath></defs></svg>`;\n\nexport const BASE_DEFAULT_PROFILE_PICTURES = [\n  BASE_DEFAULT_PROFILE_PICTURES1,\n  BASE_DEFAULT_PROFILE_PICTURES2,\n  BASE_DEFAULT_PROFILE_PICTURES3,\n  BASE_DEFAULT_PROFILE_PICTURES4,\n  BASE_DEFAULT_PROFILE_PICTURES5,\n  BASE_DEFAULT_PROFILE_PICTURES6,\n  BASE_DEFAULT_PROFILE_PICTURES7,\n];\n\nexport const COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID: EASSchemaUid =\n  '0xf8b05c79f090979bf4a80270aba232dff11a10d9ca55c4f88de95317970f0de9';\n", "/**\n * Checks if a given hash has a given length.\n * The hash must start with '0x' followed by hexadecimal characters (a-f, A-F, 0-9).\n */\nexport function checkHashLength(\n  hash: string, // hash to be checked\n  length: number, // length of hash\n): hash is `0x${string}` {\n  return new RegExp(`^0x[a-fA-F0-9]{${length}}$`).test(hash);\n}\n", "'use client';\n\nimport {\n  ONCHAIN_KIT_CONFIG,\n  setOnchainKitConfig,\n} from '@/core/OnchainKitConfig';\nimport { createContext, useMemo } from 'react';\nimport { DefaultOnchainKitProviders } from './DefaultOnchainKitProviders';\nimport OnchainKitProviderBoundary from './OnchainKitProviderBoundary';\nimport { DEFAULT_PRIVACY_URL, DEFAULT_TERMS_URL } from './core/constants';\nimport type { OnchainKitContextType } from './core/types';\nimport { COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID } from './identity/constants';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitProviderReact } from './types';\n\nexport const OnchainKitContext =\n  createContext<OnchainKitContextType>(ONCHAIN_KIT_CONFIG);\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  analytics,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const sessionId = useMemo(() => crypto.randomUUID(), []);\n\n  // eslint-disable-next-line complexity\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        analytics: analytics ?? true,\n        analyticsUrl: config?.analyticsUrl ?? null,\n        appearance: {\n          name: config?.appearance?.name ?? 'Dapp',\n          logo: config?.appearance?.logo ?? '',\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n        wallet: {\n          display: config?.wallet?.display ?? 'classic',\n          termsUrl: config?.wallet?.termsUrl || DEFAULT_TERMS_URL,\n          privacyUrl: config?.wallet?.privacyUrl || DEFAULT_PRIVACY_URL,\n          supportedWallets: {\n            rabby: config?.wallet?.supportedWallets?.rabby ?? false,\n            trust: config?.wallet?.supportedWallets?.trust ?? false,\n            frame: config?.wallet?.supportedWallets?.frame ?? false,\n          },\n        },\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID,\n      sessionId,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [\n    address,\n    analytics,\n    apiKey,\n    chain,\n    config,\n    projectId,\n    rpcUrl,\n    schemaId,\n    sessionId,\n  ]);\n\n  return (\n    <DefaultOnchainKitProviders\n      apiKey={apiKey}\n      appName={value.config.appearance.name}\n      appLogoUrl={value.config.appearance.logo}\n    >\n      <OnchainKitContext.Provider value={value}>\n        <OnchainKitProviderBoundary>{children}</OnchainKitProviderBoundary>\n      </OnchainKitContext.Provider>\n    </DefaultOnchainKitProviders>\n  );\n}\n", "import { useContext } from 'react';\nimport { OnchainKitContext } from './OnchainKitProvider';\n\nexport function useOnchainKit() {\n  return useContext(OnchainKitContext);\n}\n"],
  "mappings": "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",
  "names": ["isBase", "chainId", "isMainnetOnly", "base", "id", "baseSepolia", "isEthereum", "chainId", "isMainnetOnly", "mainnet", "id", "sepolia", "ONCHAIN_KIT_CONFIG", "address", "apiKey", "chain", "baseSepolia", "config", "analytics", "analyticsUrl", "appearance", "name", "logo", "mode", "theme", "paymaster", "wallet", "display", "termsUrl", "privacyUrl", "supportedWallets", "rabby", "trust", "frame", "rpcUrl", "schemaId", "projectId", "sessionId", "getOnchainKitConfig", "configName", "setOnchainKitConfig", "properties", "Object", "assign", "createWagmiConfig", "apiKey", "appName", "appLogoUrl", "connectors", "coinbaseWallet", "preference", "createConfig", "chains", "base", "baseSepolia", "storage", "createStorage", "cookieStorage", "ssr", "transports", "id", "http", "useProviderDependencies", "providedWagmiConfig", "providedQueryClient", "useConfig", "error", "WagmiProviderNotFoundError", "console", "useQueryClient", "message", "useMemo", "apiKey", "appName", "appLogoUrl", "connectors", "preference", "children", "providedWagmiConfig", "providedQueryClient", "WagmiProvider", "config", "defaultConfig", "client", "ANALYTICS_API_URL", "version", "POST_METHOD", "RequestContext", "JSON_HEADERS", "body", "JSON", "error", "process", "env", "prepareAnalyticsPayload", "event", "config", "url", "headers", "body", "apiKey", "getOnchainKitConfig", "sessionId", "timestamp", "Date", "eventType", "data", "origin", "WalletEvent", "WalletOption", "SwapEvent", "BuyOption", "BuyEvent", "CheckoutEvent", "MintEvent", "TransactionEvent", "FundEvent", "EarnEvent", "AppchainEvent", "ErrorEvent", "OnchainKitProviderBoundary", "constructor", "args", "state", "error", "getDerivedStateFromError", "componentDidCatch", "console", "errorInfo", "sendAnalyticsPayload", "component", "metadata", "message", "render", "fallback", "props", "_jsx", "children", "Capabilities", "DEFAULT_PRIVACY_URL", "DEFAULT_TERMS_URL", "RESOLVER_ADDRESSES_BY_CHAIN_ID", "baseSepolia", "BASE_DEFAULT_PROFILE_PICTURES", "BASE_DEFAULT_PROFILE_PICTURES1", "checkHashLength", "hash", "length", "RegExp", "test", "address", "analytics", "apiKey", "chain", "children", "config", "projectId", "rpcUrl", "schemaId", "sessionId", "useMemo", "defaultPaymasterUrl", "analyticsUrl", "appearance", "name", "logo", "mode", "theme", "paymaster", "wallet", "display", "termsUrl", "DEFAULT_TERMS_URL", "privacyUrl", "DEFAULT_PRIVACY_URL", "supportedWallets", "COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID", "setOnchainKitConfig", "onchainKitConfig", "_jsx", "DefaultOnchainKitProviders", "appName", "appLogoUrl", "value", "useOnchainKit"]
}
