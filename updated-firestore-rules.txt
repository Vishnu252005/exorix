rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ================= HELPER FUNCTIONS =================
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUserAuthenticated(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // ================= USERS COLLECTION =================
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAdmin();
    }

    // ================= EVENTS COLLECTION =================
    match /events/{eventId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        (resource.data.createdBy == request.auth.uid || isAdmin());

      // Registrations subcollection (More Permissive)
      match /registrations/{userId} {
        allow read: if true; // Anyone can read registrations
        allow create: if isAuthenticated();
        allow update: if isAuthenticated();
        allow delete: if isAuthenticated();
      }
    }

    // ================= BLOGS COLLECTION =================
    match /blogs/{blogId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update: if isAuthenticated();
      allow delete: if isAuthenticated() && 
        (resource.data.authorId == request.auth.uid || isAdmin());

      // Comments subcollection
      match /comments/{commentId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated();
      }

      // Likes subcollection
      match /likes/{likeId} {
        allow read: if true;
        allow create: if isAuthenticated();
        allow delete: if isAuthenticated();
      }
    }

    // ================= JOBS COLLECTION =================
    match /jobs/{jobId} {
      allow read: if true;
      allow create: if true; // Allows anonymous users to post jobs
      allow update, delete: if isAuthenticated();

      // Applications subcollection
      match /applications/{applicationId} {
        allow read: if isAuthenticated();
        allow create: if isAuthenticated();
        allow update, delete: if isAuthenticated();
      }
    }

    // ================= ADMIN COLLECTION =================
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }

    // ================= AUTH COLLECTION =================
    match /auth/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // ================= PUBLIC PROFILES COLLECTION =================
    match /profiles/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    // ================= OPEN ACCESS TO ALL OTHER COLLECTIONS =================
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}
